<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vector_8hh" kind="file" language="C++">
    <compoundname>vector.hh</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includedby refid="vector3_d_8hh" local="yes">vector3D.hh</includedby>
    <includedby refid="_hex_prism_8hh" local="yes">HexPrism.hh</includedby>
    <incdepgraph>
      <node id="398">
        <label>iomanip</label>
      </node>
      <node id="396">
        <label>vector.hh</label>
        <link refid="vector.hh"/>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="403">
        <label>cuboid.hh</label>
        <link refid="cuboid_8hh"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="415">
        <label>figures3D.hh</label>
        <link refid="figures3_d_8hh"/>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>HexPrism.cpp</label>
        <link refid="_hex_prism_8cpp"/>
      </node>
      <node id="406">
        <label>PlantOfObstacles.hh</label>
        <link refid="_plant_of_obstacles_8hh"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>vector.hh</label>
        <link refid="vector.hh"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>figures3D.cpp</label>
        <link refid="figures3_d_8cpp"/>
      </node>
      <node id="410">
        <label>Obstacles.cpp</label>
        <link refid="_obstacles_8cpp"/>
      </node>
      <node id="400">
        <label>vector3D.hh</label>
        <link refid="vector3_d_8hh"/>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="411">
        <label>Quadracopter.hh</label>
        <link refid="_quadracopter_8hh"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="412">
        <label>Quadracopter.cpp</label>
        <link refid="_quadracopter_8cpp"/>
      </node>
      <node id="404">
        <label>Obstacles.hh</label>
        <link refid="_obstacles_8hh"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>cuboid.cpp</label>
        <link refid="cuboid_8cpp"/>
      </node>
      <node id="418">
        <label>ObjectOfScene.hh</label>
        <link refid="_object_of_scene_8hh"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="405">
        <label>scene.hh</label>
        <link refid="scene_8hh"/>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>ObjectOfScene.cpp</label>
        <link refid="_object_of_scene_8cpp"/>
      </node>
      <node id="401">
        <label>matrix.hh</label>
        <link refid="matrix_8hh"/>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>matrix3x3.hh</label>
        <link refid="matrix3x3_8hh"/>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>scene.cpp</label>
        <link refid="scene_8cpp"/>
      </node>
      <node id="407">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="416">
        <label>HexPrism.hh</label>
        <link refid="_hex_prism_8hh"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="408">
        <label>PlantOfObstacles.cpp</label>
        <link refid="_plant_of_obstacles_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_vector" prot="public">Vector</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="vector_8hh_1adb28a5f78e62e5f765f75b74becdca71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Typ</type>
          </param>
          <param>
            <type>int</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, Vector&lt; Typ, Dimension &gt; &amp;vector)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref>&lt; Typ, Dimension &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Wczytania wektora translacji. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Typ</parametername>
</parameternamelist>
<parameterdescription>
<para>- Typ wspolrzednej </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>- wymiar wektora </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>- stumien do wczytywania </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor wczytywany </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::istream&amp; - zwracamy stumien z wczytanym wektorem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="203" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="203" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="vector_8hh_1afeaf8fb8b664587e991dc4bb914aeb27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Typ</type>
          </param>
          <param>
            <type>int</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;output_stream, const Vector&lt; Typ, Dimension &gt; &amp;vector)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output_stream</declname>
        </param>
        <param>
          <type>const <ref refid="class_vector" kindref="compound">Vector</ref>&lt; Typ, Dimension &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Wypisanie wspolrzednych wektora. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Typ</parametername>
</parameternamelist>
<parameterdescription>
<para>- typ wspolrzednych </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>- wymiar wektora </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output_stream</parametername>
</parameternamelist>
<parameterdescription>
<para>- stumien do zapisu wspolrzednych </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>- wyswietlany wektor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream&amp; - stumien z danymi </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="232" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="232" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="vector_8hh_1ab463ac1a1b292bf5e677d887482e569b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Typ</type>
          </param>
          <param>
            <type>int</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
        </templateparamlist>
        <type>std::ofstream &amp;</type>
        <definition>std::ofstream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ofstream &amp;output_stream, const Vector&lt; Typ, Dimension &gt; &amp;vector)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>output_stream</declname>
        </param>
        <param>
          <type>const <ref refid="class_vector" kindref="compound">Vector</ref>&lt; Typ, Dimension &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Zapisanie wspolrzednych do pliku. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Typ</parametername>
</parameternamelist>
<parameterdescription>
<para>- typ wspolrzednej </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>- wymiar wektora </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output_stream</parametername>
</parameternamelist>
<parameterdescription>
<para>- zwracdany strumien plikowy z danymi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ofstream&amp; - strumien z danymi </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="253" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="253" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definicja szablonu Vector&lt;&gt; </para>    </briefdescription>
    <detaileddescription>
<para>Plik zawiera szablon wektora </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="27" refid="class_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_vector_1a4696b907a043a0cf7feb8ef74efaee97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Typ<sp/>coordinates[Dimension];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_vector_1add70f47687018cd95d2486bd479f131a" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vector_1add70f47687018cd95d2486bd479f131a" kindref="member">counter</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_vector_1a7c6fa150970fc507368e0d06f9626194" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vector_1a7c6fa150970fc507368e0d06f9626194" kindref="member">CounterUpdated</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_vector_1aba3f9dd718ed08bc7d91471d5856bd1c" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vector_1aba3f9dd718ed08bc7d91471d5856bd1c" kindref="member">HowMany</ref>(){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Liczba<sp/>stworzonych<sp/>obiektow<sp/>Vector<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>CounterUpdated<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Liczba<sp/>aktualnie<sp/>istniejacych<sp/>obiektow<sp/>Vector<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_vector_1a0dff28c6575a4239e55d76c62e12f9c8" refkind="member"><highlight class="normal"><sp/><ref refid="class_vector_1a0dff28c6575a4239e55d76c62e12f9c8" kindref="member">Vector</ref>(){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){coordinates[i]=0;}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>CounterUpdated++;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_vector_1a474267f5ebbaf240b6e01e9f9a4008dc" refkind="member"><highlight class="normal"><ref refid="class_vector_1a474267f5ebbaf240b6e01e9f9a4008dc" kindref="member">~Vector</ref>(){counter--;}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_vector_1ac9bd98e42e721a38a9f92e6de1ac91ac" refkind="member"><highlight class="normal"><ref refid="class_vector_1ac9bd98e42e721a38a9f92e6de1ac91ac" kindref="member">Vector</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{coordinates[0]=x;coordinates[1]=y;coordinates[2]=z;counter++;CounterUpdated++;}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_vector_1a839c68689534954133753f8bcc6f953d" refkind="member"><highlight class="normal"><ref refid="class_vector_1a839c68689534954133753f8bcc6f953d" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vector" kindref="compound">Vector</ref><sp/>&amp;vec){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){coordinates[i]=vec[i];}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>counter<sp/>++;}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_vector_1acfb4ddcc2287a4fcf158f559907ba378" refkind="member"><highlight class="normal">Typ<sp/>&amp;operator[]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coordinates[Index];}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_vector_1a0657574140fa760b6c624a284f7ba2b7" refkind="member"><highlight class="normal">Typ<sp/>operator[]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index)</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coordinates[Index];}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_vector_1a279d70d4570db9c244fe9e2cb74e1214" refkind="member"><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>operator<sp/>+=<sp/>(<ref refid="class_vector" kindref="compound">Vector</ref><sp/>vector2){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>coordinates[i]+=vector2[i];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_vector_1a78da39dae1595a16bf12245bc29a9beb" refkind="member"><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>&amp;operator<sp/>/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divorce){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;vector:<sp/>coordinates)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector=vector/divorce;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_vector_1a71f655b6eee1e552655d381a85aa9719" refkind="member"><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>operator<sp/>-=(<ref refid="class_vector" kindref="compound">Vector</ref><sp/>vector2){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>coordinates[i]-=vector2[i];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_vector_1a416135596d86716064a1776141b2aa31" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>==(<ref refid="class_vector" kindref="compound">Vector</ref><sp/>vector2){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coordinates[i]!=vector2[i])</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_vector_1ac661330851f69358c8fb4bdc3de0412e" refkind="member"><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>operator<sp/>-(<ref refid="class_vector" kindref="compound">Vector</ref><sp/>vector2)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="class_vector" kindref="compound">Vector</ref><sp/>vec;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>vec[i]=(*this)[i]-vector2[i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="vector_8hh_1adb28a5f78e62e5f765f75b74becdca71" refkind="member"><highlight class="normal">std::istream&amp;<sp/><ref refid="vector_8hh_1adb28a5f78e62e5f765f75b74becdca71" kindref="member">operator &gt;&gt; </ref>(std::istream<sp/>&amp;<sp/>stream,<sp/><ref refid="class_vector" kindref="compound">Vector&lt;Typ,Dimension&gt;</ref><sp/>&amp;<sp/>vector){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>vector[0]<sp/><sp/>&gt;&gt;<sp/>vector[1]<sp/>&gt;&gt;<sp/>vector[2]<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stream.fail())<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Nieprawidlowy<sp/>wektor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sprobuj<sp/>ponownie<sp/>wpisac<sp/>odpowiedni<sp/>wektor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.clear();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.ignore(10000,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>vector[0]<sp/>&gt;&gt;<sp/>vector[1]<sp/>&gt;&gt;<sp/>vector[2];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="vector_8hh_1afeaf8fb8b664587e991dc4bb914aeb27" refkind="member"><highlight class="normal">std::ostream&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(std::ostream<sp/>&amp;<sp/>output_stream,<sp/>const<sp/>Vector&lt;Typ,Dimension&gt;<sp/>&amp;<sp/>vector){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_stream<sp/>&lt;&lt;<sp/>setw(16)<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(10)<sp/>&lt;&lt;<sp/>vector[i];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_stream<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_stream;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="vector_8hh_1ab463ac1a1b292bf5e677d887482e569b" refkind="member"><highlight class="normal">std::ofstream&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(std::ofstream<sp/>&amp;<sp/>output_stream,<sp/>const<sp/>Vector&lt;Typ,Dimension&gt;<sp/>&amp;<sp/>vector){</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;Dimension;i++)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_stream<sp/>&lt;&lt;<sp/>setw(16)<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(10)<sp/>&lt;&lt;<sp/>vector[i];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_stream<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_stream;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vector" kindref="compound">Vector&lt;Typ,Dimension&gt;::counter</ref>=0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typ,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vector" kindref="compound">Vector&lt;Typ,Dimension&gt;::CounterUpdated</ref>=0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh"/>
  </compounddef>
</doxygen>
