<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_vector" kind="class" language="C++" prot="public">
    <compoundname>Vector</compoundname>
    <includes refid="vector_8hh" local="no">vector.hh</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Typ</declname>
        <defname>Typ</defname>
      </param>
      <param>
        <type>int</type>
        <declname>Dimension</declname>
        <defname>Dimension</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_vector_1a4696b907a043a0cf7feb8ef74efaee97" prot="private" static="no" mutable="no">
        <type>Typ</type>
        <definition>Typ Vector&lt; Typ, Dimension &gt;::coordinates[Dimension]</definition>
        <argsstring>[Dimension]</argsstring>
        <name>coordinates</name>
        <briefdescription>
<para>Wspolrzedne wektora. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="33" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_vector_1add70f47687018cd95d2486bd479f131a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int Vector&lt; Typ, Dimension &gt;::counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>Licznik akutalnie istniejacych obiektow. </para>        </briefdescription>
        <detaileddescription>
<para>Wyzerowanie licznika. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="41" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vector_1a7c6fa150970fc507368e0d06f9626194" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int Vector&lt; Typ, Dimension &gt;::CounterUpdated</definition>
        <argsstring></argsstring>
        <name>CounterUpdated</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>licznik stworzonych obiektow </para>        </briefdescription>
        <detaileddescription>
<para>Wyzerowanie licznika. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="47" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_vector_1aba3f9dd718ed08bc7d91471d5856bd1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Vector&lt; Typ, Dimension &gt;::HowMany</definition>
        <argsstring>()</argsstring>
        <name>HowMany</name>
        <briefdescription>
<para>Zliczanie i obrazowanie ilosci obiektor <ref refid="class_vector" kindref="compound">Vector</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="53" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="53" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vector_1a0dff28c6575a4239e55d76c62e12f9c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; Typ, Dimension &gt;::Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <briefdescription>
<para>Construct a new <ref refid="class_vector" kindref="compound">Vector</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Kazda wspolrzedna otrzymuje wartosc 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="64" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a474267f5ebbaf240b6e01e9f9a4008dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; Typ, Dimension &gt;::~Vector</definition>
        <argsstring>()</argsstring>
        <name>~Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="72" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1ac9bd98e42e721a38a9f92e6de1ac91ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; Typ, Dimension &gt;::Vector</definition>
        <argsstring>(double x, double y, double z)</argsstring>
        <name>Vector</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Konstruktor paramatryczny , podajemy wszystkie wspolrzedne wektora. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>-wsp x </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>- wsp y </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>- wsp z </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="82" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="82" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a839c68689534954133753f8bcc6f953d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; Typ, Dimension &gt;::Vector</definition>
        <argsstring>(const Vector &amp;vec)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="class_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Konstuktor kopiujacy. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>- skopiowany obiekt </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="90" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1acfb4ddcc2287a4fcf158f559907ba378" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Typ &amp;</type>
        <definition>Typ&amp; Vector&lt; Typ, Dimension &gt;::operator[]</definition>
        <argsstring>(int Index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
<para>Zapisanie wektora wspolrzednych. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>- wybor osi </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Typ&amp; - zwracana wartosc wspolrzednej </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="100" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a0657574140fa760b6c624a284f7ba2b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Typ</type>
        <definition>Typ Vector&lt; Typ, Dimension &gt;::operator[]</definition>
        <argsstring>(int Index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
<para>uzyskanie wartosci wspolrzeednej </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>- wybor osi </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Typ - wartosc wspolrzednej </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="109" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a279d70d4570db9c244fe9e2cb74e1214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Vector&lt; Typ, Dimension &gt;::operator+=</definition>
        <argsstring>(Vector vector2)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
<para>Dodawanie dwoch wektorow. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor dodawany </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_vector" kindref="compound">Vector</ref> - wektor bazowy po dodaniu drugiego wektora </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="118" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a78da39dae1595a16bf12245bc29a9beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; Vector&lt; Typ, Dimension &gt;::operator/</definition>
        <argsstring>(double divorce)</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>divorce</declname>
        </param>
        <briefdescription>
<para>Przeciazenie dzielenia szczegolne pomocne przy animacji. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>divorce</parametername>
</parameternamelist>
<parameterdescription>
<para>- dzielnik </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_vector" kindref="compound">Vector</ref>&amp; - podzielony wektor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="134" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a71f655b6eee1e552655d381a85aa9719" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Vector&lt; Typ, Dimension &gt;::operator-=</definition>
        <argsstring>(Vector vector2)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
<para>Przeciazenie odejmowania wektorow. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor odejmowany </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_vector" kindref="compound">Vector</ref> - zwracany wektor po odjeciu </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="146" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1a416135596d86716064a1776141b2aa31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vector&lt; Typ, Dimension &gt;::operator==</definition>
        <argsstring>(Vector vector2)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
<para>Przeciazenie operatora porownania. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor do porownania </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - rowne </para></simplesect>
<simplesect kind="return"><para>false - nie rowne </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="162" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="162" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_vector_1ac661330851f69358c8fb4bdc3de0412e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Vector&lt; Typ, Dimension &gt;::operator-</definition>
        <argsstring>(Vector vector2) const </argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
<para>Odejmowanie bez zmiany obiektu. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>- wektor ktory odejmujemy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_vector" kindref="compound">Vector</ref> - zwracany wektor po odjeciu </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="179" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="179" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pojecie wektora w ukladzie wspolrzednych. </para>    </briefdescription>
    <detaileddescription>
<para>Szablon wektor modeluje pojecie wektora w ukladzie wspolrzednych. Mozliwe jest dowolne wybranie wymiaru wektora. Szablon zawiera przeciazenia operatorow indeksujacych, operatora dodawania oraz dzielenia. Konstruktor przypisuje kazdemu elementowi wektora wartosc 0. </para>    </detaileddescription>
    <location file="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" line="27" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/vector.hh" bodystart="27" bodyend="189"/>
    <listofallmembers>
      <member refid="class_vector_1a4696b907a043a0cf7feb8ef74efaee97" prot="private" virt="non-virtual"><scope>Vector</scope><name>coordinates</name></member>
      <member refid="class_vector_1add70f47687018cd95d2486bd479f131a" prot="public" virt="non-virtual"><scope>Vector</scope><name>counter</name></member>
      <member refid="class_vector_1a7c6fa150970fc507368e0d06f9626194" prot="public" virt="non-virtual"><scope>Vector</scope><name>CounterUpdated</name></member>
      <member refid="class_vector_1aba3f9dd718ed08bc7d91471d5856bd1c" prot="public" virt="non-virtual"><scope>Vector</scope><name>HowMany</name></member>
      <member refid="class_vector_1a279d70d4570db9c244fe9e2cb74e1214" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator+=</name></member>
      <member refid="class_vector_1ac661330851f69358c8fb4bdc3de0412e" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator-</name></member>
      <member refid="class_vector_1a71f655b6eee1e552655d381a85aa9719" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator-=</name></member>
      <member refid="class_vector_1a78da39dae1595a16bf12245bc29a9beb" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator/</name></member>
      <member refid="class_vector_1a416135596d86716064a1776141b2aa31" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator==</name></member>
      <member refid="class_vector_1acfb4ddcc2287a4fcf158f559907ba378" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="class_vector_1a0657574140fa760b6c624a284f7ba2b7" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="class_vector_1a0dff28c6575a4239e55d76c62e12f9c8" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="class_vector_1ac9bd98e42e721a38a9f92e6de1ac91ac" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="class_vector_1a839c68689534954133753f8bcc6f953d" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="class_vector_1a474267f5ebbaf240b6e01e9f9a4008dc" prot="public" virt="non-virtual"><scope>Vector</scope><name>~Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
