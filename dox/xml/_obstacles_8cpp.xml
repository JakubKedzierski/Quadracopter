<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_obstacles_8cpp" kind="file" language="C++">
    <compoundname>Obstacles.cpp</compoundname>
    <includes refid="_obstacles_8hh" local="yes">Obstacles.hh</includes>
    <incdepgraph>
      <node id="237">
        <label>iomanip</label>
      </node>
      <node id="238">
        <label>cuboid.hh</label>
        <link refid="cuboid_8hh"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>figures3D.hh</label>
        <link refid="figures3_d_8hh"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>vector.hh</label>
        <link refid="vector_8hh"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
      </node>
      <node id="239">
        <label>cmath</label>
      </node>
      <node id="230">
        <label>Obstacles.cpp</label>
        <link refid="Obstacles.cpp"/>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>vector3D.hh</label>
        <link refid="vector3_d_8hh"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>fstream</label>
      </node>
      <node id="231">
        <label>Obstacles.hh</label>
        <link refid="_obstacles_8hh"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>ObjectOfScene.hh</label>
        <link refid="_object_of_scene_8hh"/>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>vector</label>
      </node>
      <node id="241">
        <label>matrix.hh</label>
        <link refid="matrix_8hh"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>matrix3x3.hh</label>
        <link refid="matrix3x3_8hh"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_obstacles_8cpp_1a339db866e755b353993742f764a7e994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ofstream &amp;</type>
        <definition>ofstream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ofstream &amp;output_ofstream, Obstacles &amp;obs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>output_ofstream</declname>
        </param>
        <param>
          <type><ref refid="class_obstacles" kindref="compound">Obstacles</ref> &amp;</type>
          <declname>obs</declname>
        </param>
        <briefdescription>
<para>Zapis przeszkod. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output_ofstream</parametername>
</parameternamelist>
<parameterdescription>
<para>- stumien do zapisu </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obs</parametername>
</parameternamelist>
<parameterdescription>
<para>- przeszkody </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ofstream&amp; - stumien z zapisanymi danymi </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/src/Obstacles.cpp" line="13" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/src/Obstacles.cpp" bodystart="13" bodyend="19"/>
        <references refid="class_obstacles_1aacee9a8a19128a528e2b236485030128" compoundref="_obstacles_8hh" startline="38" endline="38">Obstacles::GetObstacle</references>
        <referencedby refid="class_obstacles_1aacee9a8a19128a528e2b236485030128" compoundref="_obstacles_8hh" startline="38" endline="38">Obstacles::GetObstacle</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_obstacles_8hh" kindref="compound">Obstacles.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_obstacles_1a28b7f32500e1e58465ef5dc9e2d63ec1" refkind="member"><highlight class="normal"><ref refid="class_obstacles_1a51c7f97c28a251ab75d711b23d9fe8e1" kindref="member">Obstacles::Obstacles</ref>(<ref refid="class_vector" kindref="compound">Vector3D</ref><sp/>centre,<ref refid="class_vector" kindref="compound">Vector3D</ref><sp/>size){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cuboid" kindref="compound">Cuboid</ref><sp/>ob1(centre,size);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>=ob1;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_object_of_scene_1a3940aba3014aefed326cdc4301333af1" kindref="member">symetry</ref>=centre;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="_obstacles_8cpp_1a339db866e755b353993742f764a7e994" refkind="member"><highlight class="normal">ofstream&amp;<sp/><ref refid="_obstacles_8cpp_1a339db866e755b353993742f764a7e994" kindref="member">operator &lt;&lt; </ref>(std::ofstream<sp/>&amp;<sp/>output_ofstream,<sp/><ref refid="class_obstacles" kindref="compound">Obstacles</ref><sp/>&amp;obs){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cuboid" kindref="compound">Cuboid</ref><sp/>cube=obs.<ref refid="class_obstacles_1aacee9a8a19128a528e2b236485030128" kindref="member">GetObstacle</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>output_ofstream<sp/>&lt;&lt;<sp/>cube<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_ofstream;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_obstacles_1a873ae714db7bf22195867aed06e72227" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_obstacles_1a873ae714db7bf22195867aed06e72227" kindref="member">Obstacles::IfCollision</ref>(<ref refid="class_vector" kindref="compound">Vector3D</ref><sp/>PhysicalPoint,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height=7.5;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zle<sp/>numerki<sp/>sa<sp/>bo<sp/>nowy<sp/>konstuktor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[0][0]-radius&lt;PhysicalPoint[0]<sp/>&amp;&amp;<sp/>PhysicalPoint[0]<sp/>&lt;<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[1][0]+radius){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[0][1]-radius&lt;PhysicalPoint[1]<sp/>&amp;&amp;<sp/>PhysicalPoint[1]&lt;<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[2][1]+radius){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[0][2]-height&lt;PhysicalPoint[2]<sp/>&amp;&amp;<sp/>PhysicalPoint[2]<sp/>&lt;<ref refid="class_obstacles_1a524ef2c37e9160887bd20780d68cff76" kindref="member">cub</ref>[4][2]+height){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Przeszkodo-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_obstacles_1a41b1c2255c6230514fb6a91afb5f8f7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_obstacles_1a41b1c2255c6230514fb6a91afb5f8f7b" kindref="member">Obstacles::WriteToFile</ref>(ofstream<sp/>&amp;stream){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(*this);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kuba/obiekt/DronLvHard/prj/src/Obstacles.cpp"/>
  </compounddef>
</doxygen>
