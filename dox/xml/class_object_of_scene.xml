<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_object_of_scene" kind="class" language="C++" prot="public">
    <compoundname>ObjectOfScene</compoundname>
    <derivedcompoundref refid="class_obstacles" prot="public" virt="non-virtual">Obstacles</derivedcompoundref>
    <derivedcompoundref refid="class_quadracopter" prot="public" virt="non-virtual">Quadracopter</derivedcompoundref>
    <includes refid="_object_of_scene_8hh" local="no">ObjectOfScene.hh</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_object_of_scene_1a3940aba3014aefed326cdc4301333af1" prot="protected" static="no" mutable="no">
        <type><ref refid="vector3_d_8hh_1a8790ef07836c1639da216f46501979c0" kindref="member">Vector3D</ref></type>
        <definition>Vector3D ObjectOfScene::symetry</definition>
        <argsstring></argsstring>
        <name>symetry</name>
        <briefdescription>
<para>srodek symetri obiektu sceny </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="19" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_object_of_scene_1a1a2714bc1777bd167536f760fcd6c417" compoundref="_object_of_scene_8hh" startline="91" endline="91">GetSymetry</referencedby>
        <referencedby refid="class_obstacles_1a28b7f32500e1e58465ef5dc9e2d63ec1" compoundref="_obstacles_8cpp" startline="4" endline="11">Obstacles::Obstacles</referencedby>
        <referencedby refid="class_quadracopter_1ac9bed2c9c204a7f260fec4f1f71e3402" compoundref="_quadracopter_8cpp" startline="5" endline="34">Quadracopter::ChangeOrientation</referencedby>
        <referencedby refid="class_quadracopter_1a9acb965be075b277df0901e99cccfacf" compoundref="_quadracopter_8cpp" startline="46" endline="67">Quadracopter::Quadracopter</referencedby>
        <referencedby refid="class_quadracopter_1aa1c2a6f507a5bcd7bc37fa5d44a930e5" compoundref="_quadracopter_8cpp" startline="128" endline="138">Quadracopter::MoveSymetry</referencedby>
        <referencedby refid="class_quadracopter_1a27a2a987ddd033cdc774dbdd1a28d153" compoundref="_quadracopter_8cpp" startline="140" endline="157">Quadracopter::IfCollision</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_object_of_scene_1ae1b26e0c68453235a991601aa8f8c8e5" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ObjectOfScene::counterS</definition>
        <argsstring></argsstring>
        <name>counterS</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>Liczniki wystapien obiektow sceny. </para>        </briefdescription>
        <detaileddescription>
<para>Inicjalizacja licznika. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="27" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_object_of_scene_1a4f29f829eca02965019b1d0bc28f3af1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ObjectOfScene::AddCounter</definition>
        <argsstring></argsstring>
        <name>AddCounter</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>Calkowity licznik wystapien obiektow sceny. </para>        </briefdescription>
        <detaileddescription>
<para>Inicjalizacja licznika wszystkich wystapien obiektow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="33" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="33" bodyend="-1"/>
        <referencedby refid="class_object_of_scene_1a94770327cfa3c391fbf6b8e4f9635248" compoundref="_object_of_scene_8hh" startline="58" endline="60">HowManyScene</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_object_of_scene_1a248118c01bc3c0b3df93bcc8ff4c169d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ObjectOfScene::ObjectOfScene</definition>
        <argsstring>()</argsstring>
        <name>ObjectOfScene</name>
        <briefdescription>
<para>Construct a new Object Of Scene object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="39" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_object_of_scene_1a1f973b6e583fe163630538a9da7caad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ObjectOfScene::~ObjectOfScene</definition>
        <argsstring>()</argsstring>
        <name>~ObjectOfScene</name>
        <briefdescription>
<para>Destroy the Object Of Scene object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="45" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_object_of_scene_1a9dae6b015fdf9354b8f49235d10c439e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ObjectOfScene::ObjectOfScene</definition>
        <argsstring>(const ObjectOfScene &amp;obj)</argsstring>
        <name>ObjectOfScene</name>
        <param>
          <type>const <ref refid="class_object_of_scene" kindref="compound">ObjectOfScene</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Konstrktor kopiujacy. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- obiekt sceny </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="52" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_object_of_scene_1ab58c09e26c9c6016fe86dcbd1b76df00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectOfScene::IfCollision</definition>
        <argsstring>(Vector3D PhysicalPoint, double radius) const </argsstring>
        <name>IfCollision</name>
        <reimplementedby refid="class_obstacles_1a873ae714db7bf22195867aed06e72227">IfCollision</reimplementedby>
        <reimplementedby refid="class_quadracopter_1a27a2a987ddd033cdc774dbdd1a28d153">IfCollision</reimplementedby>
        <param>
          <type><ref refid="vector3_d_8hh_1a8790ef07836c1639da216f46501979c0" kindref="member">Vector3D</ref></type>
          <declname>PhysicalPoint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Sprawdzenie kolizji z obiektem. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PhysicalPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>- srodek symetri wybranego drona </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>- promien </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - jest kolizja </para></simplesect>
<simplesect kind="return"><para>false - nie ma kolizji </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="72" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_object_of_scene_1a79bbabdf7e17459475bf30856cf176aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ObjectOfScene::WriteToFile</definition>
        <argsstring>(ofstream &amp;stream)</argsstring>
        <name>WriteToFile</name>
        <reimplementedby refid="class_obstacles_1a41b1c2255c6230514fb6a91afb5f8f7b">WriteToFile</reimplementedby>
        <reimplementedby refid="class_quadracopter_1a0653c1a4019907005c4d758168ad2ec1">WriteToFile</reimplementedby>
        <param>
          <type>ofstream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Zapis do pliku obiektow sceny. </para>        </briefdescription>
        <detaileddescription>
<para>Dla kazdego obiektu zapis uzywa innego przeciazenia dlatego ta metoda jest wirtualna</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>- strumien do zapisu </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - udany zapis </para></simplesect>
<simplesect kind="return"><para>false - nieudany zapis </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="84" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_object_of_scene_1a1a2714bc1777bd167536f760fcd6c417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="vector3_d_8hh_1a8790ef07836c1639da216f46501979c0" kindref="member">Vector3D</ref> &amp;</type>
        <definition>Vector3D&amp; ObjectOfScene::GetSymetry</definition>
        <argsstring>()</argsstring>
        <name>GetSymetry</name>
        <briefdescription>
<para>Pobranie punktu symetri. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector3D&amp; - punkt symetri </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="91" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="91" bodyend="91"/>
        <references refid="class_object_of_scene_1a3940aba3014aefed326cdc4301333af1" compoundref="_object_of_scene_8hh" startline="19">symetry</references>
        <referencedby refid="main_8cpp_1ae6f911847aa1576987a4a55da84635c8" compoundref="main_8cpp" startline="105" endline="166">ChangeOrientation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_object_of_scene_1a94770327cfa3c391fbf6b8e4f9635248" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ObjectOfScene::HowManyScene</definition>
        <argsstring>()</argsstring>
        <name>HowManyScene</name>
        <briefdescription>
<para>Wypisanie ilosci obiektow sceny. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="58" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="58" bodyend="60"/>
        <references refid="class_object_of_scene_1a4f29f829eca02965019b1d0bc28f3af1" compoundref="_object_of_scene_8hh" startline="33">AddCounter</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="199" endline="462">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Klasa bazowa dla drona i przeszkod. </para>    </briefdescription>
    <detaileddescription>
<para>Modeluje pojecie obiektu sceny, przypisuje mu srodek symetri </para>    </detaileddescription>
    <inheritancegraph>
      <node id="19">
        <label>Obstacles</label>
        <link refid="class_obstacles"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Quadracopter</label>
        <link refid="class_quadracopter"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>ObjectOfScene</label>
        <link refid="class_object_of_scene"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22">
        <label>Vector&lt; double, 3 &gt;</label>
        <link refid="class_vector"/>
      </node>
      <node id="21">
        <label>ObjectOfScene</label>
        <link refid="class_object_of_scene"/>
        <childnode refid="22" relation="usage">
          <edgelabel>symetry</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" line="11" column="1" bodyfile="/home/kuba/obiekt/DronLvHard/prj/inc/ObjectOfScene.hh" bodystart="11" bodyend="93"/>
    <listofallmembers>
      <member refid="class_object_of_scene_1a4f29f829eca02965019b1d0bc28f3af1" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>AddCounter</name></member>
      <member refid="class_object_of_scene_1ae1b26e0c68453235a991601aa8f8c8e5" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>counterS</name></member>
      <member refid="class_object_of_scene_1a1a2714bc1777bd167536f760fcd6c417" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>GetSymetry</name></member>
      <member refid="class_object_of_scene_1a94770327cfa3c391fbf6b8e4f9635248" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>HowManyScene</name></member>
      <member refid="class_object_of_scene_1ab58c09e26c9c6016fe86dcbd1b76df00" prot="public" virt="virtual"><scope>ObjectOfScene</scope><name>IfCollision</name></member>
      <member refid="class_object_of_scene_1a248118c01bc3c0b3df93bcc8ff4c169d" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>ObjectOfScene</name></member>
      <member refid="class_object_of_scene_1a9dae6b015fdf9354b8f49235d10c439e" prot="public" virt="non-virtual"><scope>ObjectOfScene</scope><name>ObjectOfScene</name></member>
      <member refid="class_object_of_scene_1a3940aba3014aefed326cdc4301333af1" prot="protected" virt="non-virtual"><scope>ObjectOfScene</scope><name>symetry</name></member>
      <member refid="class_object_of_scene_1a79bbabdf7e17459475bf30856cf176aa" prot="public" virt="virtual"><scope>ObjectOfScene</scope><name>WriteToFile</name></member>
      <member refid="class_object_of_scene_1a1f973b6e583fe163630538a9da7caad8" prot="public" virt="virtual"><scope>ObjectOfScene</scope><name>~ObjectOfScene</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
